name: AI Code Review

on:
  # pull_request:
  #   types:
  #     - opened
  #     - synchronize
  #     - reopened
  issue_comment:
    types:
      - created

permissions: write-all

jobs:
  review:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request') || 
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request && 
       startsWith(github.event.comment.body, '/bot-review'))
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Extract review parameters
        id: extract
        if: github.event_name == 'issue_comment'
        run: |
          COMMENT="${{ github.event.comment.body }}"
          if [[ "$COMMENT" =~ /bot-review:\ ([a-f0-9]+) ]]; then
            echo "COMMIT_SHA=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "REVIEW_MODE=single_commit" >> $GITHUB_OUTPUT
          elif [[ "$COMMENT" =~ /bot-review:\ ([a-f0-9]+)\.\.([a-f0-9]+) ]]; then
            echo "BASE_SHA=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "HEAD_SHA=${BASH_REMATCH[2]}" >> $GITHUB_OUTPUT
            echo "REVIEW_MODE=commit_range" >> $GITHUB_OUTPUT
          else
            echo "REVIEW_MODE=latest" >> $GITHUB_OUTPUT
          fi

      - name: AI Code Reviewer
        uses: qiancai/ai-codereviewer@test-v2
        continue-on-error: false  # Ensure workflow fails if the action fails
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          API_PROVIDER: "deepseek"  # or "openai" if you want to use OpenAI
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          DEEPSEEK_API_MODEL: "deepseek-chat"  # Updated model name
          exclude: "**/*.json"  # Optional: exclude patterns separated by commas
          REVIEW_MODE: ${{ steps.extract.outputs.REVIEW_MODE || 'default' }}
          COMMIT_SHA: ${{ steps.extract.outputs.COMMIT_SHA || '' }}
          BASE_SHA: ${{ steps.extract.outputs.BASE_SHA || '' }}
          HEAD_SHA: ${{ steps.extract.outputs.HEAD_SHA || '' }}
          ALLOWED_USERS: "qiancai"

